towardsdatascience:
  route: /get-news-from-towards-science
  prompt:
    请通过 headless 的方式帮我搜集 https://towardsdatascience.com/tag/editors-pick/ 最热门的前三条信息，这些信息大概率在 main 元素的 ul li 下面。

    请一步步寻找，先罗列所有元素剔除了 css class 后的 html 源代码，过滤可能是广告的元素后然后再从元素里面找到符合要求数量的有效元素。不要在第一步的时候就盲目获取元素的属性。

    然后帮我进入这些网站后总结相关信息，文章通常也在 <main> 中，返回翻译好的简体中文，并且整理成一个简单的资讯。
    按以下格式输出（严格禁止添加任何额外引导语或总结句）：

    [用一句吸引人的话开头，例如："⌨️ 今日份 AI & CS 技术文章分享"]

    📌 [翻译成简体中文的文章标题]
    摘要：[文章的核心观点，100字以内]
    作者：[若存在]
    发布时间：[若存在]
    链接：[文章URL]
  
  mcp:
    command: node ~/project/Lagrange.RagBot/node/servers/my-browser/dist/browser.js
  
  settings:
    systemPrompt: 'you are a clever bot'

hacknews:
  route: /get-news-from-hack-news
  prompt:
    请通过 headless 的方式帮我搜集 https://news.ycombinator.com/ 最热门的前三条信息。

    请一步步寻找，先罗列所有元素剔除了 css class 后的 html 源代码，过滤可能是广告的元素后然后再从元素里面找到符合要求数量的有效元素。不要在第一步的时候就盲目获取元素的属性。

    然后帮我进入这些网站后总结相关信息，返回翻译好的简体中文，并且整理成一个简单的资讯。
    按以下格式输出（严格禁止添加任何额外引导语或总结句）：

    [用一句吸引人的话开头，例如："⌨️ 今日份 AI & CS 技术文章分享"]

    📌 [翻译成简体中文的文章标题]
    摘要：[文章的核心观点，100字以内]
    作者：[若存在]
    发布时间：[若存在]
    链接：[文章URL]`.
  
  mcp:
    command: node ~/project/Lagrange.RagBot/node/servers/my-browser/dist/browser.js
  
  settings:
    systemPrompt: 'you are a clever bot'